<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="X.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnThoat.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAQ1SURBVEhL3ZVdTJNnFMf7MdS9X23fFnTFYQcYZHwsk2T4kWwEL4hKgonREO9czCIaw4yJRBKN
        F+iNJiYa8cYsonLDjZpQvXBoLbUtuglLXNWYOTQsk1bo2y9AkHN2zmu7VRHS7XJP8stzep5zzv88z/v2
        eQ2G//0IqKrJb7ev77fZ2j0WSyfjs9vbAwUF6wcKCkz/+QD8VusiKrrbL4ojvxYW4khdHUS2bcNIczP8
        0dAAoRUrwC9JIz6HY3fQbl/0r4T8NttSryx7Hy9fDmP79kHiwgVMXLoEicuX385MVxeMHTiAj4uKwKso
        3qDDsTQnEb+iqD5RDA1XVaF25gzGu7r+4eJFjDNZvtjZszhcXY0+SQoFVVVdUIS2bOyXpN6nxcUwfvIk
        aufOQYw61chO9PZC8vp1TLrdwHb0xAmI0c44hmLhaUkJ+mS5N6goxnlF7krSpiFFgdH9+yHa2YmJ7m7Q
        jhyBSSqsHT8OyZ4eTPT0ANuTN27wGtKxcSznIOcGLJZNCwnc/K22FqOnTmHi/HnUDh3C2WgUeUx5vagd
        PoxcdKq/X/fNahpG29v1WM55tm4d+mX55gcFArJsvSeK0y9bWiBx+jRobW04QUfBg4vxzCJTPp/uy/hT
        tJPowYOcgy/pheAaAzabdY5IQJLqhpYtw/jRo5A8dozB6N69MOHx/C2QEcoIpGgn43v2QLKjQ4/n3F8K
        C4EE6uYIDMjy1keVlZhsa4M0uj2+cyek7tzRd5AtkPR6IVxfj7EtWyC+fTskW1v1+EfV1XDfbt86R+Ce
        LDc+KS/HVEvLO7xqbkbu9P2RuH0bR1evxnhNzVvWrMHUrl34pKICf1bVxjkC9xVl1UO7HVONjTCxYweD
        r5qaIEGdZjp//4jifX04Sh0nq6oYTK5dCw/z8+GBzbbqgw/6J1H8Pb5yJU5QZ2OE5na/03jM40GNOs8e
        Y1euYKS4GCfKyjBeWopcY97X9IEkdTxzOGDK5YJJlwtHNm+GGU3Td6DdugVhKhAuKYFoX5/+nKfpFX6+
        cSPHcg5y7iDVmFeAFlXqIPwnbfO104lTTie8oAKRa9cwTEXYRwDbkatX4XlDgx7DPsrh7sNDsrzwdTEo
        ik0DgjAzbLXitMOhM66qOEPzG4JnJpr28TrHcs4Q5eZ04Q0KwndBQXhNwAtZhpSi4Bu6BmZpJoBt8vEa
        cgzHck5OxTNB3UuWbPALQshLBX4UBOQ5QDMBaR/P/DvEsTkXp6vQaDMYTBVGo/lrs1lqzcv79ofFi910
        BBrBR8Fo7Pue1r6hmC9MJnM+5dDnbd6b1EwdfExYCIo1FBKfEWVEJfElZX7lNBrriQ1k15KvhqgmyokS
        4lOCPzp8DwnER9m7YuW89AKLOIhPiKJ0Mgt9nhZjwQqC/0ylhCvdEDfGxUWCP6E5f69ZnOGEbDL+7Ebn
        2H8BOLoRYZiVGZ8AAAAASUVORK5CYII=
</value>
  </data>
</root>